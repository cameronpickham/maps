// Generated by CoffeeScript 1.6.3
(function() {
  var map, mapOptions, plot;

  mapOptions = {
    zoom: 12,
    center: new google.maps.LatLng(34.02234, -118.28512),
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    disableDefaultUI: true
  };

  map = new google.maps.Map(d3.select("#map-canvas").node(), mapOptions);

  plot = function(place) {
    var info_window, latLng, marker;
    latLng = place.latLng;
    info_window = new google.maps.InfoWindow({
      content: "" + place.name + ": " + place.count
    });
    marker = new google.maps.Marker({
      map: map,
      position: new google.maps.LatLng(latLng[0], latLng[1])
    });
    google.maps.event.addListener(marker, 'mouseover', function() {
      return info_window.open(map, marker);
    });
    return google.maps.event.addListener(marker, 'mouseout', function() {
      return info_window.close();
    });
  };

  $.getJSON("./checkins.json", function(data) {
    var overlay;
    google.maps.event.addDomListener(window, "load", (function() {
      var place, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        place = data[_i];
        _results.push(plot(place));
      }
      return _results;
    })());
    overlay = new google.maps.OverlayView();
    overlay.onAdd = function() {
      var layer;
      layer = d3.select(this.getPanes().overlayLayer).append("div").attr("class", "stations");
      return overlay.draw = function() {
        var marker, padding, projection, transform;
        transform = function(d) {
          console.log('hi', d);
          d = new google.maps.LatLng(d.value.latLng[0], d.value.latLng[1]);
          d = projection.fromLatLngToDivPixel(d);
          return d3.select(this).style("left", (d.x - padding) + "px").style("top", (d.y - padding) + "px");
        };
        projection = this.getProjection();
        padding = 10;
        marker = layer.selectAll("svg").data(d3.entries(data)).each(transform).enter().append("svg:svg").each(transform).attr("class", "marker");
        return marker.append("svg:circle").attr("r", 4.5).attr("cx", padding).attr("cy", padding);
      };
    };
    return overlay.setMap(map);
  });

  $("#list").click(function() {
    return $("#menu").collapse('toggle');
  });

  $(".recent").click(function(event) {
    var clickedId, ele, latLng, vals;
    clickedId = $(this).attr("id").substring(3);
    ele = $("body").find('#' + "input-" + clickedId);
    vals = ele.val().split(/[, ]+/);
    latLng = vals.map(function(v) {
      return parseFloat(v);
    });
    map.setCenter(new google.maps.LatLng(latLng[0], latLng[1]));
    return $("#menu").collapse('toggle');
  });

  $("#close").click(function() {
    return $("#menu").collapse('toggle');
  });

}).call(this);
